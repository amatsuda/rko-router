daemon off;
#Heroku dynos have 4 cores.
worker_processes 4;

events {
	use epoll;
	accept_mutex on;
	worker_connections 1024;
}

http {
        gzip on;
        gzip_comp_level 2;
        gzip_min_length 512;

	log_format l2met 'measure#nginx.service=$request_time request_id=$http_heroku_request_id';
	access_log logs/nginx/access.log l2met;
	error_log logs/nginx/error.log;

	include mime.types;
	default_type application/octet-stream;
	sendfile on;

	#Must read the body in 5 seconds.
	client_body_timeout 5;

  server {
		listen <%= ENV["PORT"] %>;
    server_name regional.rubykaigi.org *.tokyo.rubykaigi.org;

    location ~ ^/oedo03(.*) {
      proxy_pass http://oedo03.herokuapp.com;
#       rewrite ^/oedo03(.*)$ http://oedo03.herokuapp.com/oedo03$1 permanent;
    }

    location ~ ^/assets/oedo03 {
      rewrite ^/assets/oedo03 http://oedo03.herokuapp.com/assets/oedo03 permanent;
    }

    #
    # kansai 05, y10y
    #
    location ~ ^/kansai05(.*) {
      proxy_pass http://kanrk05.herokuapp.com;
    }

    location ~ ^/assets/kansai05 {
      rewrite ^/assets/kansai05 http://kanrk05.herokuapp.com/assets/kansai05 permanent;
    }

    #
    # chuork 01, y6y
    #
    location ~ ^/chuork01(.*) {
      proxy_pass http://chuork.github.io;
    }

    #
    # okrk01, y6y
    #
    location ~ ^/okrk01(.*) {
      proxy_pass http://okinawarb.github.io;
    }

    root /home/regional/railsapp/current/public;
  }

  server {
		listen <%= ENV["PORT"] %>;
    server_name j.rubykaigi.org;

    location = / {
      rewrite ^/$ /2011 redirect;
    }

    location ~ ^/20([0-9][0-9]) {
      rewrite ^/20([0-9][0-9])$ http://jrubykaigi.org/20$1 permanent;
    }
    location ~ ^/20([0-9][0-9])/ {
      rewrite ^/20([0-9][0-9])/$ /20$1 redirect;
    }
  }

  server {
		listen <%= ENV["PORT"] %>;
    server_name yami.rubykaigi.org;

    location = / {
      rewrite ^/$ /2011 redirect;
    }

    location ~/2011 {
      rewrite ^/2011/?$ http://yamirubykaigi.wordpress.com permanent;
    }
  }

  server {
		listen <%= ENV["PORT"] %>;
    server_name  rubykaigi.org www.rubykaigi.org ~^200[6-8]\.rubykaigi\.org$;

    rewrite_log on;

    if ($host ~* www\.(.*)) {
      set $host_without_www $1;
      rewrite ^(.*)$ http://$host_without_www permanent;
    }

    if ($host ~* (200[6-8])\.(.*)) {
      set $rubykaigi_year $1;
      rewrite ^(.*)$ http://jp.rubyist.net/RubyKaigi$rubykaigi_year permanent;
    }

    root /home/rubykaigi/railsapp/current/public;

    location /2009/  {
      default_type text/html;
      rewrite ^/2009/$ /2009/ja permanent;
      rewrite ^/2009/(ja|en)/?$ /2009/$1.html break;
      rewrite ^/2009/(ja|en)/talks/?$ /2009/$1/talks.html break;
      index index.html;
    }

    location /2010/ {
      default_type text/html;
      rewrite ^/2010/$ /2010/ja permanent;
      rewrite ^/2010/(ja|en)/?$ /2010/$1.html break;
      rewrite ^/2010/(ja|en)/events/?$ /2010/$1/events.html break;
      index index.html;
    }

    location ~ ^/assets/(20[1-9][3-9]) {
        rewrite ^/assets/(20[1-9][3-9])(.*)$ http://rubykaigi$1.herokuapp.com/assets/$1$2;
    }

    location ~ ^/2013(.*) {
        proxy_pass http://rubykaigi2013.herokuapp.com;
    }

    if ($request_filename ~* /([0-9][0-9][0-9][0-9])?(images|javascripts|stylehseets)/) { break; }
    if ($request_filename ~* .ico$) { break; }
  }

  server {
		listen <%= ENV["PORT"] %>;
    server_name  staging.rubykaigi.org;

    root /home/rubykaigi/railsapp.staging/current/public;

    location /2009/  {
      default_type text/html;
      rewrite ^/2009/$ /2009/ja permanent;
      rewrite ^/2009/(ja|en)/?$ /2009/$1.html break;
      rewrite ^/2009/(ja|en)/talks/?$ /2009/$1/talks.html break;
      index index.html;
    }

    location /2010/ {
      default_type text/html;
      rewrite ^/2010/$ /2010/ja permanent;
      rewrite ^/2010/(ja|en)/?$ /2010/$1.html break;
      rewrite ^/2010/(ja|en)/events/?$ /2010/$1/events.html break;
      index index.html;
    }


    if ($request_filename ~* /([0-9][0-9][0-9][0-9])?(images|javascripts|stylehseets)/) { break; }
    if ($request_filename ~* .ico$) { break; }
  }
}
